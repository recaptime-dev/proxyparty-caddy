#!/usr/bin/env bash

CADDY_CONFIG_HOME=${CADDY_CONFIG_HOME:-"$HOME/src"}
FF_USE_DOCKER=${FF_USE_DOCKER:-"0"}
FF_ONLY_RELOAD_CONFIG=${FF_ONLY_RELOAD_CONFIG}

[ ${FF_FORCE_GIT_PULL+x} ] && git -C $CADDY_CONFIG_HOME pull --ff-only

if [[ ${FF_USE_DOCKER+x} ]]; then
  cp "${CADDY_CONFIG_HOME}/config/systemd/caddy-docker.service" "$HOME/.config/systemd/user/caddy-docker.service"
else
  cp "${CADDY_CONFIG_HOME}/config/systemd/caddy.service" "$HOME/.config/systemd/user/caddy.service"
fi
systemctl --user daemon-reload
if [[ ${FF_USE_DOCKER+x} ]]; then
  systemctl --user enable caddy-docker.service --now
else
  systemctl --user enable cady.serbice --now
fi

if [[ ${FF_USE_DOCKER} == "1" ]]; then
  if [[ $FF_ONLY_RELOAD_CONFIG == "1" ]]; then
    caddy_container_id=$(docker ps | grep caddy | awk '{print $1;}')
    docker exec -w /etc/caddy $caddy_container_id caddy reload
  else
    systemctl --user restart caddy-docker.service
  fi
else
  if [[ $FF_ONLY_RELOAD_CONFIG == "1" ]]; then
    caddy reload --config "${CADDY_CONFIG_HOME/config/caddy/meta.Caddyfile" --adapter caddyfile
  else
    systemctl --user restart caddy.service
  fi
fi
